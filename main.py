import logging
from aiogram import Bot, Dispatcher, executor, types
from db import Database
from aiogram.dispatcher.filters import Command
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.types import Message

logging.basicConfig(level=logging.INFO)

bot = Bot(token="7017427981:AAHu7xiLJLosSLPG7SNogbMr6mHIdqosBJo")
dp = Dispatcher(bot)
db = Database('database.db')

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if message.chat.type == 'private':
        if not db.user_exists(message.from_user.id):
            db.add_user(message.from_user.id)
            await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!üëã\n'
                                                     '\n'
                                                     '–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ!\n'
                                                     'üí∏–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ–Ω—É –Ω–æ—Ç–∫–æ–∏–Ω—Éüí∏\n\n'
                                                     '              * –ñ–ú–ò *\n'
                                                     '            ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n'
                                                     'https://t.me/hamster_kombat_bot?start=kentId5619598337')

@dp.message_handler(commands=['—Å—Ñ–æ—Ç–æ—Ç–µ–∫—Å—Ç'])
async def sendall(message: types.Message):
    if message.chat.type == 'private':
        if message.from_user.id == 5619598337:
            text = message.text[12:]
            link_start = '[-'
            link_end = '-]'
            with open('laptop.jpg', 'rb') as photo:
                if link_start in text and link_end in text:
                    start_index = text.find(link_start) + len(link_start)
                    end_index = text.find(link_end)
                    link_text = text[start_index:end_index]
                    users = db.get_users()
                    for row in users:
                        try:
                            await bot.send_photo(row[0], photo, caption=text.replace(link_start + link_text + link_end, f'<a href="http://yourlink.com">{link_text}</a>', 1), parse_mode='HTML')
                            if int(row[1]) != 1:
                                db.set_active(row[0], 1)
                        except:
                            db.set_active(row[0], 0)
                else:
                    users = db.get_users()
                    for row in users:
                        try:
                            await bot.send_photo(row[0], photo, caption=text)
                            if int(row[1]) != 1:
                                db.set_active(row[0], 1)
                        except:
                            db.set_active(row[0], 0)

            await bot.send_message(message.from_user.id, "–£—Å–ø–µ—à–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞")


@dp.message_handler(commands=['—Å—Ñ–æ—Ç–æ—Ç–µ–∫—Å—Ç–∫–Ω–æ–ø'])
async def sendall(message: types.Message):
    if message.chat.type == 'private':
        if message.from_user.id == 5619598337:
            split_text = message.text.split(' ')
            knop = split_text[1]
            text = message.text[17 + len(knop) + 1:]
            link_start = '[-'
            link_end = '-]'
            keyboard = types.InlineKeyboardMarkup()
            button = types.InlineKeyboardButton(text=knop, url="https://example.com")
            keyboard.add(button)
            with open('laptop.jpg', 'rb') as photo:
                if link_start in text and link_end in text:
                    start_index = text.find(link_start) + len(link_start)
                    end_index = text.find(link_end)
                    link_text = text[start_index:end_index]
                    users = db.get_users()
                    for row in users:
                        try:
                            await bot.send_photo(row[0], photo, caption=text.replace(link_start + link_text + link_end, f'<a href="http://yourlink.com">{link_text}</a>', 1), parse_mode='HTML', reply_markup=keyboard)
                            if int(row[1]) != 1:
                                db.set_active(row[0], 1)
                        except:
                            db.set_active(row[0], 0)
                else:
                    users = db.get_users()
                    for row in users:
                        try:
                            await bot.send_photo(row[0], photo, caption=text, reply_markup=keyboard)
                            if int(row[1]) != 1:
                                db.set_active(row[0], 1)
                        except:
                            db.set_active(row[0], 0)

            await bot.send_message(message.from_user.id, "–£—Å–ø–µ—à–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞")


@dp.message_handler(commands=['—Å—Å—ã–ª–∫–∞—Ç–µ–∫—Å—Ç'])
async def sendall(message: types.Message):
    if message.chat.type == 'private':
        if message.from_user.id == 5619598337:
            text = message.text[13:]
            link_start = '[-'
            link_end = '-]'
            if link_start in text and link_end in text:
                start_index = text.find(link_start) + len(link_start)
                end_index = text.find(link_end)
                link_text = text[start_index:end_index]
                users = db.get_users()
                for row in users:
                    try:
                        await bot.send_message(row[0], text.replace(link_start + link_text + link_end, f'<a href="http://yourlink.com">{link_text}</a>', 1), parse_mode='HTML')
                        if int(row[1]) != 1:
                            db.set_active(row[0], 1)
                    except:
                        db.set_active(row[0], 0)
            else:
                users = db.get_users()
                for row in users:
                    try:
                        await bot.send_message(row[0], text)
                        if int(row[1]) != 1:
                            db.set_active(row[0], 1)
                    except:
                        db.set_active(row[0], 0)

            await bot.send_message(message.from_user.id, "–£—Å–ø–µ—à–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞")


@dp.message_handler(commands=['—Å—Å—ã–ª–∫–∞—Ç–µ–∫—Å—Ç–∫–Ω–æ–ø'])
async def sendall(message: types.Message):
    if message.chat.type == 'private':
        if message.from_user.id == 5619598337:
            split_text = message.text.split(' ')
            knop = split_text[1]
            text = message.text[17 + len(knop) + 1:]  # –£—á–∏—Ç—ã–≤–∞–µ–º –¥–ª–∏–Ω—É –∫–æ–º–∞–Ω–¥—ã –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π knop, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–±–µ–ª–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π knop
            link_start = '[-'
            link_end = '-]'
            if link_start in text and link_end in text:
                start_index = text.find(link_start) + len(link_start)
                end_index = text.find(link_end)
                link_text = text[start_index:end_index]
                keyboard = types.InlineKeyboardMarkup()
                button = types.InlineKeyboardButton(text=knop, url="https://example.com")
                keyboard.add(button)
                users = db.get_users()
                for row in users:
                    try:
                        await bot.send_message(row[0], text.replace(link_start + link_text + link_end, f'<a href="http://yourlink.com">{link_text}</a>', 1), parse_mode='HTML', reply_markup=keyboard)
                        if int(row[1]) != 1:
                            db.set_active(row[0], 1)
                    except:
                        db.set_active(row[0], 0)
            else:
                keyboard = types.InlineKeyboardMarkup()
                button = types.InlineKeyboardButton(text=knop, url="https://example.com")
                keyboard.add(button)
                users = db.get_users()
                for row in users:
                    try:
                        await bot.send_message(row[0], text, reply_markup=keyboard)
                        if int(row[1]) != 1:
                            db.set_active(row[0], 1)
                    except:
                        db.set_active(row[0], 0)

            await bot.send_message(message.from_user.id, "–£—Å–ø–µ—à–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞")


@dp.message_handler(content_types=types.ContentType.PHOTO)
async def save_photo(message: Message):
    if message.chat.type == 'private':
        if message.from_user.id == 5619598337:
            photo = message.photo[-1]  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é (—Å–∞–º—É—é –±–æ–ª—å—à—É—é) —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
            file_id = photo.file_id
            file_info = await bot.get_file(file_id)
            file_path = file_info.file_path
            downloaded_file = await bot.download_file(file_path)

            with open('laptop.jpg', 'wb') as new_file:
                new_file.write(downloaded_file.read())

            await message.answer("–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø–æ–¥ –∏–º–µ–Ω–µ–º laptop.jpg")


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)